public com.mojang.blaze3d.pipeline.RenderPipeline$Builder <init>()V
public com.mojang.blaze3d.pipeline.RenderPipeline$Builder nextPipelineSortKey
public com.mojang.blaze3d.pipeline.RenderPipeline$Builder location
public com.mojang.blaze3d.pipeline.RenderPipeline$Builder fragmentShader
public com.mojang.blaze3d.pipeline.RenderPipeline$Builder vertexShader
public com.mojang.blaze3d.pipeline.RenderPipeline$Builder definesBuilder
public com.mojang.blaze3d.pipeline.RenderPipeline$Builder samplers
public com.mojang.blaze3d.pipeline.RenderPipeline$Builder uniforms
public com.mojang.blaze3d.pipeline.RenderPipeline$Builder depthTestFunction
public com.mojang.blaze3d.pipeline.RenderPipeline$Builder polygonMode
public com.mojang.blaze3d.pipeline.RenderPipeline$Builder cull
public com.mojang.blaze3d.pipeline.RenderPipeline$Builder writeColor
public com.mojang.blaze3d.pipeline.RenderPipeline$Builder writeAlpha
public com.mojang.blaze3d.pipeline.RenderPipeline$Builder writeDepth
public com.mojang.blaze3d.pipeline.RenderPipeline$Builder colorLogic
public com.mojang.blaze3d.pipeline.RenderPipeline$Builder blendFunction
public com.mojang.blaze3d.pipeline.RenderPipeline$Builder vertexFormat
public com.mojang.blaze3d.pipeline.RenderPipeline$Builder vertexFormatMode
public com.mojang.blaze3d.pipeline.RenderPipeline$Builder depthBiasScaleFactor
public com.mojang.blaze3d.pipeline.RenderPipeline$Builder depthBiasConstant
public com.mojang.blaze3d.pipeline.RenderPipeline$Builder stencilTest
public com.mojang.blaze3d.pipeline.RenderPipeline$Builder withSnippet(Lcom/mojang/blaze3d/pipeline/RenderPipeline$Snippet;)V # withSnippet
public net.minecraft.client.renderer.RenderType$CompositeRenderType state
public net.minecraft.client.renderer.RenderType$CompositeState outputState
public net.minecraft.client.renderer.RenderType$CompositeRenderType renderPipeline
public net.minecraft.client.renderer.RenderType$CompositeRenderType
public com.mojang.blaze3d.opengl.GlBuffer handle